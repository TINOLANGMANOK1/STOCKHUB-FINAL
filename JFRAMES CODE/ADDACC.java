/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

/**
 *
 * @author Acer
 */
import javax.swing.*;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

public class ADDACC extends javax.swing.JFrame {

    MANAGEEMPLOYEE manageFrame;
    String generatedAccountNumber = "";

    public ADDACC(MANAGEEMPLOYEE manageFrame) {
        initComponents();
        this.manageFrame = manageFrame;
        generateNextAccountNumber();
    }

    public ADDACC() {
        initComponents();
        generateNextAccountNumber();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NameF = new javax.swing.JTextField();
        CancelBtn = new javax.swing.JButton();
        AddAccountBtn = new javax.swing.JButton();
        PassF = new javax.swing.JTextField();
        RoleComboBox = new javax.swing.JComboBox<>();
        IdLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        FINALBG = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(NameF, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 204, 264, 32));

        CancelBtn.setBackground(new java.awt.Color(217, 234, 253));
        CancelBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        CancelBtn.setForeground(new java.awt.Color(0, 0, 0));
        CancelBtn.setText("CANCEL");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });
        getContentPane().add(CancelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 396, 170, 42));

        AddAccountBtn.setBackground(new java.awt.Color(217, 234, 253));
        AddAccountBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        AddAccountBtn.setForeground(new java.awt.Color(0, 0, 0));
        AddAccountBtn.setText("ADD ACCOUNT");
        AddAccountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddAccountBtnActionPerformed(evt);
            }
        });
        getContentPane().add(AddAccountBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 396, 170, 42));
        getContentPane().add(PassF, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 254, 264, 32));

        RoleComboBox.setBackground(new java.awt.Color(217, 234, 253));
        RoleComboBox.setFont(new java.awt.Font("Segoe UI Variable", 0, 12)); // NOI18N
        RoleComboBox.setForeground(new java.awt.Color(0, 0, 0));
        RoleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Employee", "Admin" }));
        RoleComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoleComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(RoleComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 306, 140, 32));

        IdLabel.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        IdLabel.setForeground(new java.awt.Color(0, 0, 0));
        IdLabel.setText("AccounNumber");
        getContentPane().add(IdLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(171, 160, 130, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("ADD ACCOUNT");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 93, 110, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Account No:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, 74, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Name:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 208, 90, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Order and Inventory System");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 40, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tw Cen MT", 1, 30)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("STOCKHUB");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Password:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 257, 74, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Role:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 308, 50, -1));

        FINALBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/ADD ITEM BG FINAL.png"))); // NOI18N
        FINALBG.setText("jLabel6");
        getContentPane().add(FINALBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_CancelBtnActionPerformed

    private void RoleComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoleComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RoleComboBoxActionPerformed

    private void AddAccountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddAccountBtnActionPerformed
        int confirmAdd = JOptionPane.showConfirmDialog(this,
                "Are you sure you want to add this account?",
                "Confirm Add Account", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (confirmAdd == JOptionPane.NO_OPTION) {
            return;
        }

        try {
            String accountNumber = generatedAccountNumber;
            String username = NameF.getText().trim();
            String password = PassF.getText().trim();
            String role = (String) RoleComboBox.getSelectedItem();

            if (username.isEmpty() || password.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill in all the fields.");
                return;
            }

            JSONParser parser = new JSONParser();
            JSONObject root = (JSONObject) parser.parse(new FileReader("src//Main//employee.json"));
            JSONArray accounts = (JSONArray) root.get("employee");

            boolean usernameExists = false;

            for (Object o : accounts) {
                JSONObject acc = (JSONObject) o;
                if (acc.get("username").equals(username)) {
                    usernameExists = true;
                    break;
                }
            }

            if (usernameExists) {
                JOptionPane.showMessageDialog(this, "Username already exists.");
                return;
            }

            JSONObject newAccount = new JSONObject();
            newAccount.put("accountNumber", accountNumber);
            newAccount.put("username", username);
            newAccount.put("password", password);
            newAccount.put("role", role);
            accounts.add(newAccount);

            FileWriter file = new FileWriter("src//Main//employee.json");
            file.write(root.toJSONString());
            file.flush();
            file.close();

            JOptionPane.showMessageDialog(this, "Account added successfully!");

            if (manageFrame != null) {
                manageFrame.refreshTable();
            }

            setVisible(false);

        } catch (IOException | ParseException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_AddAccountBtnActionPerformed
     private void generateNextAccountNumber() {
    try {
        JSONParser parser = new JSONParser();
        JSONObject root = (JSONObject) parser.parse(new FileReader("src//Main//employee.json"));
        JSONArray accounts = (JSONArray) root.get("employee");

        // Use a boolean array to track used account numbers
        int maxAccountNumber = 0;
        boolean[] usedNumbers = new boolean[1000]; // Assuming a maximum of 999 account numbers

        for (Object o : accounts) {
            JSONObject acc = (JSONObject) o;
            String accountNumber = acc.get("accountNumber").toString();
            try {
                int num = Integer.parseInt(accountNumber); // Convert account number to integer
                if (num > maxAccountNumber) {
                    maxAccountNumber = num;
                }
                usedNumbers[num] = true; // Mark the number as used
            } catch (NumberFormatException ignored) {
                // Handle invalid account numbers gracefully (if present)
            }
        }

        // Find the first unused account number
        int nextAccountNumber = 1;
        for (int i = 1; i <= maxAccountNumber; i++) {
            if (!usedNumbers[i]) {
                nextAccountNumber = i;
                break;
            }
        }

        // If no gaps, use the next sequential number
        if (nextAccountNumber == 1 && maxAccountNumber > 0) {
            nextAccountNumber = maxAccountNumber + 1;
        }

        generatedAccountNumber = String.valueOf(nextAccountNumber); // Convert to string
        IdLabel.setText(generatedAccountNumber); // Display on the label

    } catch (IOException | ParseException e) {
        e.printStackTrace();
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ADDACC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ADDACC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ADDACC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ADDACC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ADDACC().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddAccountBtn;
    private javax.swing.JButton CancelBtn;
    private javax.swing.JLabel FINALBG;
    private javax.swing.JLabel IdLabel;
    private javax.swing.JTextField NameF;
    private javax.swing.JTextField PassF;
    private javax.swing.JComboBox<String> RoleComboBox;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
