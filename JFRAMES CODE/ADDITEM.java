/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

/**
 *
 * @author Acer
 */
import javax.swing.*;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

public class ADDITEM extends javax.swing.JFrame {

    private MANAGEINVENTORY manageInventoryFrame;

    public ADDITEM(MANAGEINVENTORY manageInventoryFrame) {
        initComponents();
        this.manageInventoryFrame = manageInventoryFrame;
        generateNextItemNumber();
    }

    public ADDITEM() {
        initComponents();
        generateNextItemNumber();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        NameF = new javax.swing.JTextField();
        PriceF = new javax.swing.JTextField();
        CancelBtn = new javax.swing.JButton();
        QuantityF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        ItemNumLabel = new javax.swing.JLabel();
        AddItemBtn = new javax.swing.JButton();
        FINALBG = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ADD ITEM");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(206, 93, 74, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Item Name:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 208, 90, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Price:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 308, 50, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Item Id:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, 74, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Quantity:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 257, 74, -1));
        getContentPane().add(NameF, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 204, 264, 32));
        getContentPane().add(PriceF, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 304, 264, 32));

        CancelBtn.setBackground(new java.awt.Color(217, 234, 253));
        CancelBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        CancelBtn.setForeground(new java.awt.Color(0, 0, 0));
        CancelBtn.setText("CANCEL");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });
        getContentPane().add(CancelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 396, 170, 42));
        getContentPane().add(QuantityF, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 254, 264, 32));

        jLabel7.setFont(new java.awt.Font("Tw Cen MT", 1, 30)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("STOCKHUB");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, -1, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Order and Inventory System");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 40, -1, -1));

        ItemNumLabel.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        ItemNumLabel.setForeground(new java.awt.Color(0, 0, 0));
        ItemNumLabel.setText("ItemNumberLabel");
        getContentPane().add(ItemNumLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(171, 160, 170, -1));

        AddItemBtn.setBackground(new java.awt.Color(217, 234, 253));
        AddItemBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        AddItemBtn.setForeground(new java.awt.Color(0, 0, 0));
        AddItemBtn.setText("ADD ITEM");
        AddItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddItemBtnActionPerformed(evt);
            }
        });
        getContentPane().add(AddItemBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 396, 170, 42));

        FINALBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/ADD ITEM BG FINAL.png"))); // NOI18N
        FINALBG.setText("jLabel1");
        getContentPane().add(FINALBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, -1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 470));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_CancelBtnActionPerformed

    private void AddItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddItemBtnActionPerformed
        // TODO add your handling code here:
        addItem();
    }//GEN-LAST:event_AddItemBtnActionPerformed
     private void addItem() {
        try {
            String itemNum = ItemNumLabel.getText().trim();
            String name = NameF.getText().trim();
            String quant = QuantityF.getText().trim();
            String priceStr = PriceF.getText().trim();

            if (name.isEmpty() || quant.isEmpty() || priceStr.isEmpty()) {
                JOptionPane.showMessageDialog(
                        this,
                        "Please fill in all the fields.",
                        "Missing Info",
                        JOptionPane.WARNING_MESSAGE
                );
                return;
            }

            int quantity = Integer.parseInt(quant);
            double price = Double.parseDouble(priceStr);

            if (quantity < 0 || price < 0.0) {
                JOptionPane.showMessageDialog(
                        this,
                        "Quantity and price must not be below 0.",
                        "Invalid Input",
                        JOptionPane.WARNING_MESSAGE
                );
                return;
            }

            JSONParser parser = new JSONParser();
            JSONArray items = (JSONArray) parser.parse(new FileReader("src//Main//Items.json"));

            boolean nameExists = false;

            for (Object o : items) {
                JSONObject item = (JSONObject) o;
                if (item.get("name").toString().equalsIgnoreCase(name)) {
                    nameExists = true;
                    break;
                }
            }

            if (nameExists) {
                JOptionPane.showMessageDialog(
                        this,
                        "This item name already exists.",
                        "Duplicate Name",
                        JOptionPane.WARNING_MESSAGE
                );
                return;
            }

            int confirm = JOptionPane.showConfirmDialog(
                    this,
                    "Are you sure you want to add this item?",
                    "Confirm Add",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE
            );

            if (confirm != JOptionPane.YES_OPTION) {
                return;
            }

            JSONObject newItem = new JSONObject();
            newItem.put("itemNumber", itemNum);
            newItem.put("name", name);
            newItem.put("quantity", quantity);
            newItem.put("price", price);
            items.add(newItem);

            try (FileWriter file = new FileWriter("src//Main//Items.json")) {
                file.write(items.toJSONString());
            }

            JOptionPane.showMessageDialog(
                    this,
                    "Item added successfully!",
                    "Success",
                    JOptionPane.INFORMATION_MESSAGE
            );

            setVisible(false);
            if (manageInventoryFrame != null) {
                manageInventoryFrame.loadItems();
            }
            dispose();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                    this,
                    "Quantity and price must be valid numbers.",
                    "Invalid Input",
                    JOptionPane.WARNING_MESSAGE
            );
        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                    this,
                    "Something went wrong while adding the item.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
            e.printStackTrace();
        }
    }

    private void generateNextItemNumber() {
    try {
        JSONParser parser = new JSONParser();
        JSONArray items = (JSONArray) parser.parse(new FileReader("src//Main//Items.json"));

        ArrayList<Integer> numbers = new ArrayList<>();

        for (Object o : items) {
            JSONObject item = (JSONObject) o;
            int num = Integer.parseInt(item.get("itemNumber").toString());
            numbers.add(num);
        }

        // Find the smallest missing number
        int nextNumber = 1;
        while (numbers.contains(nextNumber)) {
            nextNumber++;
        }

        ItemNumLabel.setText(String.valueOf(nextNumber));
    } catch (Exception e) {
        ItemNumLabel.setText("1");
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ADDITEM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ADDITEM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ADDITEM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ADDITEM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ADDITEM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddItemBtn;
    private javax.swing.JButton CancelBtn;
    private javax.swing.JLabel FINALBG;
    private javax.swing.JLabel ItemNumLabel;
    private javax.swing.JTextField NameF;
    private javax.swing.JTextField PriceF;
    private javax.swing.JTextField QuantityF;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

}
