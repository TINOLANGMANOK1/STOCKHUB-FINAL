/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

/**
 *
 * @author Acer
 */
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

public class ADMINMENU extends javax.swing.JFrame {
    

    public ADMINMENU() {
        initComponents();
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        RcentOrdersTable.getTableHeader().setFont(new Font("Segoe UI Variable", Font.PLAIN, 14));
        InventoryStatusTable.getTableHeader().setFont(new Font("Segoe UI Variable", Font.PLAIN, 14));
        loadDashboardData();
        loadInventoryStatusTable();
        loadRecentOrdersTable();

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        JTable[] tables = {RcentOrdersTable, InventoryStatusTable};

        for (JTable table : tables) {
            // Center cells
            for (int i = 0; i < table.getColumnCount(); i++) {
                table.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            }

            // Custom header renderer with background color and bold font
            JTableHeader header = table.getTableHeader();
            DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
            headerRenderer.setHorizontalAlignment(JLabel.CENTER);
            headerRenderer.setBackground(Color.decode("#325ea0")); // Your desired color
            headerRenderer.setForeground(Color.WHITE); // White text looks good on dark blue

            // Set font to Segoe UI, size 14, and bold for header only
            headerRenderer.setFont(new Font("Segoe UI", Font.BOLD, 14));  // Ensure it's bold

            // Apply the custom header renderer to each column
            for (int i = 0; i < table.getColumnCount(); i++) {
                table.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
            }

            // Repaint to apply the changes
            header.repaint();  // Ensure the header is repainted after changes
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        SalesLabell = new javax.swing.JLabel();
        PendOrdLabel = new javax.swing.JLabel();
        SuggestBtn = new javax.swing.JButton();
        InventoryBtn = new javax.swing.JButton();
        LogoutBtn = new javax.swing.JButton();
        MostOrdLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        InventoryStatusTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        RcentOrdersTable = new javax.swing.JTable();
        OrderBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        EmployeeBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        TotalItmLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Background = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Most Ordered Item:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Sales Today:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, 97, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Pending Orders:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 120, 20));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Recent Orders:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 280, -1, -1));

        SalesLabell.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        SalesLabell.setForeground(new java.awt.Color(255, 255, 255));
        SalesLabell.setText("SalesLabel");
        getContentPane().add(SalesLabell, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, 70, -1));

        PendOrdLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        PendOrdLabel.setForeground(new java.awt.Color(255, 255, 255));
        PendOrdLabel.setText("PendingLabel");
        getContentPane().add(PendOrdLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 97, -1));

        SuggestBtn.setBackground(new java.awt.Color(217, 234, 253));
        SuggestBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        SuggestBtn.setForeground(new java.awt.Color(0, 0, 0));
        SuggestBtn.setText("RESTOCK SUGGESTION");
        SuggestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuggestBtnActionPerformed(evt);
            }
        });
        getContentPane().add(SuggestBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 530, 170, 42));

        InventoryBtn.setBackground(new java.awt.Color(217, 234, 253));
        InventoryBtn.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        InventoryBtn.setForeground(new java.awt.Color(0, 0, 0));
        InventoryBtn.setText("MANAGE INVENTORY");
        InventoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InventoryBtnActionPerformed(evt);
            }
        });
        getContentPane().add(InventoryBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 170, 42));

        LogoutBtn.setBackground(new java.awt.Color(217, 234, 253));
        LogoutBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        LogoutBtn.setForeground(new java.awt.Color(204, 0, 51));
        LogoutBtn.setText("LOGOUT");
        LogoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutBtnActionPerformed(evt);
            }
        });
        getContentPane().add(LogoutBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 530, 170, 42));

        MostOrdLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        MostOrdLabel.setForeground(new java.awt.Color(255, 255, 255));
        MostOrdLabel.setText("MostOrderLabel");
        getContentPane().add(MostOrdLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 110, -1));

        InventoryStatusTable.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        InventoryStatusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Stock Level", "Items"
            }
        ));
        InventoryStatusTable.setIntercellSpacing(new java.awt.Dimension(0, 5));
        InventoryStatusTable.setRowHeight(25);
        jScrollPane4.setViewportView(InventoryStatusTable);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 148, 436, 108));

        RcentOrdersTable.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        RcentOrdersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Order Id", "Date", "Price", "Status"
            }
        ));
        RcentOrdersTable.setIntercellSpacing(new java.awt.Dimension(0, 5));
        RcentOrdersTable.setRowHeight(25);
        jScrollPane3.setViewportView(RcentOrdersTable);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 300, 906, 185));

        OrderBtn.setBackground(new java.awt.Color(217, 234, 253));
        OrderBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        OrderBtn.setForeground(new java.awt.Color(0, 0, 0));
        OrderBtn.setText("MANAGE ORDER");
        OrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderBtnActionPerformed(evt);
            }
        });
        getContentPane().add(OrderBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 530, 170, 42));

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Total Items:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 97, -1));

        EmployeeBtn.setBackground(new java.awt.Color(217, 234, 253));
        EmployeeBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        EmployeeBtn.setForeground(new java.awt.Color(0, 0, 0));
        EmployeeBtn.setText("MANAGE ACCOUNTS");
        EmployeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmployeeBtnActionPerformed(evt);
            }
        });
        getContentPane().add(EmployeeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 530, 170, 42));

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Inventory Status:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(502, 126, -1, -1));

        TotalItmLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        TotalItmLabel.setForeground(new java.awt.Color(255, 255, 255));
        TotalItmLabel.setText("TotalItemsLabel");
        getContentPane().add(TotalItmLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 140, 110, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("ADMIN MAIN MENU");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(415, 92, 140, -1));

        jLabel7.setFont(new java.awt.Font("Tw Cen MT", 1, 30)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("STOCKHUB");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(415, 10, -1, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Order and Inventory System");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(392, 40, -1, -1));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/MENU BG FINAL.png"))); // NOI18N
        Background.setText("jLabel9");
        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 610));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 970, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 610, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 610));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void InventoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InventoryBtnActionPerformed
        // TODO add your handling code here:
        MANAGEINVENTORY x = new MANAGEINVENTORY();
        x.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_InventoryBtnActionPerformed

    private void OrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderBtnActionPerformed
        // TODO add your handling code here:
        MANAGEORDER manageOrder = new MANAGEORDER("Admin"); // Pass "Admin" as the role
    manageOrder.setVisible(true);
    this.dispose();
    }//GEN-LAST:event_OrderBtnActionPerformed

    private void EmployeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeBtnActionPerformed
        // TODO add your handling code here:
        MANAGEEMPLOYEE x = new MANAGEEMPLOYEE();
        x.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_EmployeeBtnActionPerformed

    private void LogoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutBtnActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(
            this,
            "Are you sure you want to log out?",
            "Confirm Logout",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE
    );

    if (confirm == JOptionPane.YES_OPTION) {
        // If user confirms, show success message
        JOptionPane.showMessageDialog(
                this,
                "Logged out successfully.",
                "Logout",
                JOptionPane.INFORMATION_MESSAGE
        );

        // Navigate to LOGIN screen
        LOGIN x = new LOGIN();
        x.setVisible(true);
        setVisible(false);
    }
    }//GEN-LAST:event_LogoutBtnActionPerformed

    private void SuggestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuggestBtnActionPerformed
        // TODO add your handling code here:
        RESTOCKSUGGESTION x = new RESTOCKSUGGESTION();
        x.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_SuggestBtnActionPerformed
   private void loadDashboardData() {
    try {
        JSONParser parser = new JSONParser();

        // Load and count items from Items.json
        JSONArray itemsArray = (JSONArray) parser.parse(new FileReader("src/Main/Items.json"));
        TotalItmLabel.setText(String.valueOf(itemsArray.size()));  // Display total items count

        // Load DailySales.json to get total sales for today
        File salesFile = new File("src/Main/DailySales.json");
        JSONArray salesArray = (JSONArray) parser.parse(new FileReader(salesFile));
        double salesToday = 0;

        LocalDate today = LocalDate.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("d/MM/yyyy"); // Adjusted to match date format in JSON
        String todayStr = today.format(formatter);

        // Look for today's sales record in DailySales.json
        for (Object obj : salesArray) {
            JSONObject record = (JSONObject) obj;
            String date = (String) record.get("date");

            // If the date matches today's date, get the total sales
            if (date.equals(todayStr)) {
                salesToday = (Double) record.get("totalSales");
                break;
            }
        }

        // Load orders and process data from Orders.json
        JSONArray ordersArray = (JSONArray) parser.parse(new FileReader("src/Main/Orders.json"));
        int pendingCount = 0;

        for (Object obj : ordersArray) {
            JSONObject order = (JSONObject) obj;
            String status = (String) order.get("status");

            // Count pending orders
            if (status.equalsIgnoreCase("Pending")) {
                pendingCount++;
            }
        }

        // Update labels with calculated data
        PendOrdLabel.setText(String.valueOf(pendingCount));  // Display pending orders count
        SalesLabell.setText("₱" + salesToday);  // Display sales today from DailySales.json

        // Load OrderStats.json to find the most ordered item
        JSONObject orderStats = (JSONObject) parser.parse(new FileReader("src/Main/OrderStats.json"));
        String mostOrdered = "N/A";
        long maxQty = 0;

        for (Object key : orderStats.keySet()) {
            String itemName = (String) key;
            long quantity = (long) orderStats.get(itemName);

            if (quantity > maxQty) {
                maxQty = quantity;
                mostOrdered = itemName;
            }
        }

        // Update the label for the most ordered item
        MostOrdLabel.setText(mostOrdered);  // Display most ordered item

    } catch (IOException | ParseException e) {
    }
}

    private void loadInventoryStatusTable() {
        try {
            JSONParser parser = new JSONParser();

            // Load items from Items.json
            JSONArray itemsArray = (JSONArray) parser.parse(new FileReader("src/Main/Items.json"));

            // Variables to store stock counts
            int lowStock = 0;
            int normalStock = 0;
            int overstock = 0;

            // Loop through items and classify them
            for (Object obj : itemsArray) {
                JSONObject item = (JSONObject) obj;
                long quantity = (Long) item.get("quantity");

                if (quantity < 11) {
                    lowStock++;
                } else if (quantity <= 100) {
                    normalStock++;
                } else {
                    overstock++;
                }
            }

            // Set data to the table
            Object[][] data = {
                {"Low Stock", lowStock},
                {"Normal Stock", normalStock},
                {"Overstock", overstock}
            };

            // Update the InventoryStatusTable with the data
            InventoryStatusTable.setModel(new javax.swing.table.DefaultTableModel(
                    data,
                    new String[]{"Stock Level", "Items"}
            ));

        } catch (IOException | ParseException e) {
        }
    }

   private void loadRecentOrdersTable() {
    try {
        JSONParser parser = new JSONParser();

        // Load orders from Orders.json
        JSONArray ordersArray = (JSONArray) parser.parse(new FileReader("src/Main/Orders.json"));

        // Convert JSONArray to list for sorting
        List<JSONObject> sortedOrders = new ArrayList<>();
        for (Object obj : ordersArray) {
            sortedOrders.add((JSONObject) obj);
        }

        // Sort by orderId in descending order
        sortedOrders.sort((o1, o2) -> {
            String orderId1 = (String) o1.get("orderId");
            String orderId2 = (String) o2.get("orderId");
            return orderId2.compareTo(orderId1); // Descending order
        });

        // Prepare data for top 10 recent orders
        Object[][] data = new Object[Math.min(6, sortedOrders.size())][5];  // Changed 9 to 10
        for (int i = 0; i < data.length; i++) {
            JSONObject order = sortedOrders.get(i);
            String orderId = (String) order.get("orderId");
            String date = (String) order.get("date");
            JSONArray items = (JSONArray) order.get("items");
            double totalPrice = (double) order.get("totalPrice");
            String status = (String) order.get("status");

            data[i][0] = orderId;
            data[i][1] = date;
            data[i][2] = items.size();
            data[i][3] = String.format("₱%.2f", totalPrice);
            data[i][4] = status;
        }

        // Set data to the table
        RcentOrdersTable.setModel(new javax.swing.table.DefaultTableModel(
                data,
                new String[]{"Order ID", "Date", "Items", "Total Price", "Status"}
        ));

    } catch (IOException | ParseException e) {
    }
}
   
   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ADMINMENU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(() -> {
            new ADMINMENU().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JButton EmployeeBtn;
    private javax.swing.JButton InventoryBtn;
    private javax.swing.JTable InventoryStatusTable;
    private javax.swing.JButton LogoutBtn;
    private javax.swing.JLabel MostOrdLabel;
    private javax.swing.JButton OrderBtn;
    private javax.swing.JLabel PendOrdLabel;
    private javax.swing.JTable RcentOrdersTable;
    private javax.swing.JLabel SalesLabell;
    private javax.swing.JButton SuggestBtn;
    private javax.swing.JLabel TotalItmLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
